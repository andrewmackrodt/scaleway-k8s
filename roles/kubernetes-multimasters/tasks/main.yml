---
- set_fact: kube_arch="{{ ansible_architecture | replace('x86_64', 'amd64') | replace('arm', 'armhf') }}"

# todo document what this is and use iptables module
- name: Fixing nasty bug
  shell: "iptables -P FORWARD ACCEPT"
  ignore_errors: True

- include: modules.yml

- include: keepalived.yml
  when:
    - "'masters' in group_names"
    - groups.masters | length > 1

# at this point everyone should be able to ping the api floating ip if multimaster
# add a test here and don't continue until everyone does not ping the api ip

- include: packages.yml

# generate a new token
- name: Generating a kubeadm token
  shell: "kubeadm token generate"
  register: kubeadm_token
  changed_when: False
  check_mode: False
  when: inventory_hostname == initial_master

# add masters
- block:
    - include: kubeadm-config.yml

    # docker-in-docker sometimes hangs pulling images so explicitly do it here
    - include: docker-images.yml

    - include: kubeadm-master.yml
      when: inventory_hostname == initial_master

    # then we create the other masters
    - include: kubeadm-multi.yml
      when: inventory_hostname != initial_master

  when: "'masters' in group_names"

- name: Wait for kubedns to be running
  shell: "kubectl get pods --namespace=kube-system | grep kube-dns"
  register: result
  until: result.stdout.find("3/3") != -1
  retries: 180
  delay: 10
  when: inventory_hostname == initial_master

# add non masters
- include: kubeadm-worker.yml
  when: "'masters' not in group_names"

# remove this wait and had a test to check all nodes are ready
- name: Wait for all nodes to be ready
  shell: "kubectl get nodes {{ inventory_hostname }} | tail -n+2 | awk '{ print $2 }'"
  register: result
  until: result.stdout.find("Ready") == 0
  retries: 36
  delay: 10
  delegate_to: "{{ initial_master }}"

- debug: var=result
